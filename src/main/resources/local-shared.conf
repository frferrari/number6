price-scraper-service.grpc.interface = "127.0.0.1"

akka.remote.artery.canonical.hostname = "127.0.0.1"
akka.management.http.hostname = "127.0.0.1"

akka.management.cluster.bootstrap.contact-point-discovery {
  service-name = "price-scraper-service"
  discovery-method = config
  # boostrap filters ports with the same IP assuming they are previous instances running on the same node
  # unless a port is specified
  port-name = "management"
  required-contact-point-nr = 1
  # config service discovery never changes
  stable-margin = 1 ms
  # bootstrap without all the nodes being up
  contact-with-all-contact-points = false
}

akka.discovery.config.services {
  "price-scraper-service" {
    endpoints = [
      {host = "127.0.0.1", port = 9101}
      {host = "127.0.0.1", port = 9102}
      {host = "127.0.0.1", port = 9103}
    ]
  }
}

jdbc-connection-settings {
  driver = "org.postgresql.Driver"

  url = "jdbc:postgresql://localhost:5432/number6?reWriteBatchedInserts=true"
  user = "number6"
  password = "number6"

  # the following properties are used to configure the
  # Hikari connection pool used on the read-side (akka-projections)
  connection-pool {
    # How many connections should be available to from the pool?
    # it's recommended to use the same value used by the blocking-jdbc-dispatcher (see above)
    max-pool-size = ${akka.projection.jdbc.blocking-jdbc-dispatcher.thread-pool-executor.fixed-pool-size}

    # How long should we wait (in millis) before it times out?
    # In a normal scenario, we should always be able to get a connection
    # If we got a thread from the blocking-jdbc-dispatcher, we should be able to get a connection.
    # If for some reason the pool can't provide a connection, it's better to let it crash and liberate the current thread.
    # Hence the low timout (note, 250 is lowest value hikari accepts)
    timeout = 250ms
  }
}


# common config for akka.kafka.producer.kafka-clients and akka.kafka.consumer.kafka-clients
kafka-connection-settings {
  bootstrap.servers = "localhost:9092"
}
akka.kafka.producer {
  kafka-clients = ${kafka-connection-settings}
}
akka.kafka.consumer {
  kafka-clients = ${kafka-connection-settings}
}

price-scraper-service.host = "localhost"
price-scraper-service.port = 8301

# for reduced Projection latency
akka.persistence.cassandra.events-by-tag.eventual-consistency-delay = 200 ms
